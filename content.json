{"posts":[{"title":"Cheung Chau","text":"Cheung Chau Personal Photography Collection Fisherman Birds and fish Road White House Oil painting Tree shade Tyndall Toys RELEAX Sacred Island Clock ringing Refuge Waves Tofu Tricolour Memories Hot Dinner","link":"/2023/01/04/Cheung-Chau/"},{"title":"HCI project hands-on","text":"Many hardcore coders look down on user-interface designers because that work is not ‘really’ computing. Apart from a general lack of respect, such assumptions are downright false. The current project is to make programmer aware that a good usability experience starts with proper coding. A faulty machine is a nuisance irrespective of the slick interface, the VR goggles, or the high-resolution touch screens. The second thing you should become aware of is that coding the user interface takes usually ⅓rd of your programming effort and also this code should be flawless. Otherwise, dissatisfied clients. And you out of business pretty quickly. People rely on you and your logics when they use your application in a daily situation. They are focused on their tasks (e.g., open-heart surgery, flying an airplane, teaching autistic children) and not on your code. Hick-ups in your work harm their performance. So you better create excellent user interfaces and should not treat interfaces as a frivolous byproduct. To show you what people may use my code for, I design this HCI project that helps to learn primary school children to rehearse the multiplication tables (1 x 2 = 2, 2 x 2 = 4, etc.): Tecnology routesFirst StageFind stakeholdersI create a user interface for children. Make a list of the tasks they have to perform when learning the multiplication tables. What do children need to practice? The interface could be a robot but does not have to be. It could also be a game, or… whatever helps them to learn. I look what is out there on the Internet and design something of my own. Go to the stakeholders (children, parents, teachers) and interview them (at least one of each): what do they need, what would they prefer? You can do the interviews online. Show them examples (a real app, a ppt with pictures, a cardboard mock-up) and let them reflect on it. User requirements (children):I interviewed my twin cousins, who had just learned multiplication at a young age. First, they told me that the teacher taught multiplication tables by having them memorize and then write them silently at school. Those who couldn’t do it could be punished with detention. “ We hated memorizing the multiplication tables, it was hard and boring to memorize so many multiplication equations at once, but we hated detention even more because then we couldn’t go home and watch TV.” I asked them if I could create an interface for them, maybe a game or anything that would help them learn, and what kind of interface they would expect. They first thought of a game they could play with two people, which was a great idea as they both do everything together all the time. When I asked if they preferred a co-op type or a competitive two-player game, the ladies thought that a competitive game would be more engaging for them.” But mum won’t let us play on the computer. Can we play your game on our mum’s phones?” So, the ladies’ requests were: a two-player competitive mobile game that would help them learn multiplication. Secondly, the game would help them memorize the multiplication tables so they could pass their school tests and get the ladies home on time to watch TV. Finally, it had to be fun enough to keep the ladies engaged. My designI have designed a simple two-player mobile game for children. In the original design, the screen was split in half down the middle, and the two players had to sit opposite to play. The question is displayed in the middle, and the options are underneath the question. The player had to choose the correct one of the three options. I implemented a rudimentary game interface for this idea first to ask if it met the children’s needs. Expectedly the children told me that the interface was too simple and ugly for them to engage with, but happily, they approved of the game format. They were looking forward to sitting on either end of the phone to decide on the winner, but the rudimentary model could not also count the score and announce the winner. Finally, the children had an interesting request for the time and power status bar to be displayed correctly during the game. Although I told them I could add a time module to the interface if they needed to see the time, they still felt the status bar was necessary as they were used to seeing the time there. After re-analyzing the children’s needs, I redesigned the game’s interface, adding some cartoon characters and more natural background color to keep the children engaged. The status bar and winning mechanism was also implemented, with incorrect answers turning the small box at the bottom of the screen red and not rewarding the player with a score, and correct answers turning green and rewarding the player with ten points. The team with the highest score after answering all five questions will be declared the winner of the game. Children can gradually memorize the multiplication formulae repeatedly in competitions, as the questions generate two random numbers from 1-10 to multiply together, and only by familiarising themselves with all the multiplication formulae in the multiplication tables can they increase the player’s probability of winning. This satisfies the children’s requirements. Technical specifications:The UI interface is designed and implemented in Figma, the core code is written in python and the game mechanics code is written in pseudo-code. My implementation): class GameInterface(){ var user1index := 1 var user2index := 1 ​ var user1score := 0 ​ var user2score := 0 var num1, num2, answer, option1, option2:integer var user2num1, user2num2, user2answer, user2option1, user2option2:integer ​ var user1button = [buttonimage1, buttonimage2, buttonimage3] var user2button = [buttonimage4, buttonimage5, buttonimage6] ​ var background = backgroundimage Function selectAnswer(){ Index := index + 1 If the correct option for user 1 is pressed: ​ Show user1 correct image Show user1 “+10!” image ​ user1score := user1score + 10 else if the wrong option for user 1 is pressed: ​ Show user1 incorrect image Show user1 “+0!” image Store num1*num2=answer in errorBook if the correct option for user 2 is pressed: ​ Show user2 correct image Show user2 “+10!” image ​ user2score := user2score + 10 else if the wrong option for user 2 is pressed: ​ Show user2 incorrect image Show user2 “+0!” image Store num1*num2=answer in errorBook ​ If the user1index and user2index greater than or equal to five: ​ If the user1score greater than user2score: ​ Hiden user1button ​ Show user1 “YOU WIN!!” image Show user1 “REPLAY”image Read user1totlescore from user1totlescore user1totlescore:= user1totlescore + user1score Store user1totlescore in user1totlescore Store “user1 win” in gameResult ​ Else if the user1socre smaller than user2score: ​ Hiden user2button ​ Show user2 “YOU WIN!!” image Show user2 “REPLAY”button Read user2totlescore from user2totlescore user2totlescore:= user2totlescore + user1score Store user2totlescore in user2totlescore Store “user2 win” in gameResult ​ Else: ​ Show new user1 random question ​ Show new user2 random question ​ if user1index smaller than five: ​ Show new user1 random question ​ if user2index smaller than five: ​ Show new user2 random question ​ If the “REPLAY”button be pressed: ​ Run replay() } Function replay(){ var user1index := 1 var user2index := 1 ​ var user1score := 0 ​ var user2score := 0 ​ Show new user1 random question ​ Show new user2 random question } } User requirements (children’s parent):The children’s parent, my aunt, wanted to view the results of last three game in her interface so that she could see which children needed to improve their multiplication table skills and which ones deserved praise. My design:Three green squares represent the last three games for victory or red squares for defeated, not only that but also the total game score and win rate. This fulfills the parents’ requirements. Technical specifications:The UI interface is designed and implemented in Figma, the core code is written in python and the game mechanics code is written in pseudo-code. Image source: https://store.line.me/stickershop/product/20102/zh-Hant My implementation (prototype application/code): Class parentInterface(){ ​ Var backGround := ParentInterfaceBackGroundImage ​ Var user1name := “PLAYER1” ​ Var user2name := ”PLAYER2” ​ Read user1totlescore from user2totlescore Read user2totlescore from user2totlescore Read gameSessions from gameResult Read user1winTimes from gameResult Read user2wintimes from gameResult user1button = {hide,hide,hide} user2button = {hide,hide,hide} Function lastThreeResult(){ j := 0 For I := 0 to 3: ​ If user1 win: ​ user1button[j] := green user2button[j] := red ​ else: ​ ser1button[j] := red user2button[j] := green ​ j := j + 1 } Function showTotelScore(){ Show user1totlescore Show user2totlescore } Function showWinRate(){ user1WinRate := user1WinTimes/gameSessions user2WinRate := user2WinTimes/gameSessions Show user1WinRate Show user2WinRate } Function enterPlayer1Name(){ User1name := user input Hiden user1“(ENTER NAME)” image } Function enterPlayer2Name(){ User2name := user input Hiden user2“(ENTER NAME)” image } } User requirements (children’s teacher):The children’s teacher said it would be helpful if the interface could generate an error book to save the questions on which the children often make mistakes so that he can be more aware of which questions are prone to errors. My design:On the teacher’s screen, the game saves the children’s incorrect questions and displays the top six in order of the number of errors. The top three questions with the most mistakes will, in turn, become more significant and redder, giving excellent responses to the teacher on the questions where the children are most likely to make mistakes. Technical specifications:The UI interface is designed and implemented in Figma, the core code is written in python and the game mechanics code is written in pseudo-code.Image source: https://store.line.me/stickershop/product/20102/zh-Hant My implementation (prototype application/code): Class teacherInterface(){ ​ Var backGround := teacherInterfaceBackGroundImage ​ Function readErrorHistoryTimes(){ Read errorHistrory from errorBook ​ Var errorHistroryTimes[length[errorHistrory]] ​ For i := 0 to length[errorHistrory]: ​ For j := 0 to length[errorHistrory]: ​ If errorHistory[i] is equivalent to errorHistory[j]: ​ errorHistoryTimes[j] := errorHistoryTimes[j] + 1 ​ else: ​ errorHistoryTimes[i] := 1 } Function sort(errorHistory , errorHistoryTimes){ Var top1ErrorTimes, top2ErrorTimes, top3ErrorTimes, top4ErrorTimes, top5ErrorTimes, topErrorTimes 6 := 0 Var top1str, top2str, top3str, top4str, top5str, top6str For i := 0 to length[errorHistoryTimes]: ​ If top1 greater than errorHistoryTimes[i]: ​ If top2 greater than errorHistoryTimes[i]: ​ If top3 greater than errorHistoryTimes[i]: ​ If top4 greater than errorHistoryTimes[i]: ​ If top5 greater than errorHistoryTimes[i]: ​ If top6 greater than errorHistoryTimes[i]: ​ Else: ​ top1ErrorTimes := errorHistoryTimes[i] top1str := errorHistory[i] ​ else: ​ top2ErrorTimes := errorHistoryTimes[i] top2str := errorHistory[i] ​ else: ​ top3ErrorTimes:= errorHistoryTimes[i] ​ top3str := errorHistory[i] ​ else: ​ top4ErrorTimes := errorHistoryTimes[i] ​ top4str := errorHistory[i] ​ else: ​ top5ErrorTimes := errorHistoryTimes[i] ​ top5str := errorHistory[i] ​ else: ​ top6ErrorTimes:= errorHistoryTimes[i] ​ top6str := errorHistory[i] show top1str,top1ErrorTimes show top2str,top2ErrorTimes show top3str,top3ErrorTimes show top4str,top4ErrorTimes show top5str,top5ErrorTimes show top6str,top6ErrorTimes } } Count Now count all the lines of code I used to create an interface for my user groups. Express in percentages: How much programming was dedicated to the core code of multiplication and how much to the various interfaces. The core code is 4 lines long, which is 2.42% of the total code. Interface 1 code is 65 lines long, which is 39.39% Interface 2 code is 41 lines long, which is 25.85% Interface 3 code is 55 lines long, which is 33.33% Conclusion Coding the user interface is tougher than programming the core code, this is because the needs of new users can often have a significant impact when writing interactions. For example, in this assignment, when I asked the teachers and parents for requirements after completing the children’s game interface, they needed to be able to view the error book or be able to view the results of the game. It was necessary to write a new interface for new users and add a module to the completed children’s game interface to store data that new users would like to see, such as the scores the children got or the mistakes the children often made, without any changes to the core code. As you can imagine, as the number of users increases, the new needs of new users will create a significant amount of programming work for HCI compared to the core code. Programmers can use time complexity, package size, algorithm runtime, and console output to ensure that their core code runs correctly and efficiently and produces the expected results when coding the core. However, in HCI programming, the programmer often does not know if the result is what the user wishes, as the user often does not know what they expect. It is challenging to ensure that the designed interface is efficient. The need described to me by the children’s parents in this assignment was vague and abstract: “I want to know how well the children are doing and how well they have mastered the multiplication tables.” How to measure “how well” and “mastery” and display them on the interface is much more complex than printing the multiplication on the screen. Programmers often have to stop and think, “is this what the user wants.” Secondly, what makes HCI programming more challenging than core code programming is that errors are difficult to detect and correct. For example, in the second question of this assignment, to find a bug in the code of the topic, I could first try to run the code by copying the string into the compiler. The compiler would immediately report the error to me after a failed compilation, e.g., the return type of the function in line 8 is not int, a semicolon is missing at the end of line 10, etc. Even after the compilation had produced the output, I could determine the for loop condition in the program by looking at the output. Even when it compiles and produces output, I can tell by looking at the output that there may be an error in the for loop condition, as the output produced is not what was expected.In summary, the compiler and programmer’s judgment can find and correct most errors in core code programming. However, this was not the case in HCI programming, and it was not until a final check in this assignment that we discovered that the scores in the game screen designed for the children did not display appropriately whether the children answered the questions correctly or incorrectly and that the scores did not change, but remained at 0. Neither the children nor the parents nor even I noticed this problem until we were trying to implement the parent’s attempt to find out whether the children. The problem was only discovered when a new score-saving function was added to the then completed game screen when parents wanted to know if their children were “doing well,” as the green or red squares at the ends of the screen also represented wins and losses so that users may have inadvertently overlooked the problem. In any case, since the compiler cannot detect such invisible bugs, HCI programmers may not notice any errors in their design. So compared to core code programming, which can be seen with a precise machine and has accurately described output for reference, HCI programming efforts suffer from errors and flaws that are difficult to notice. Finally, the workload of HCI programming is not less than that of core code. Before this assignment, I also thought that the work of HCI programming should be easy and romantic. Still, after interviewing users repeatedly, I found out that the work of HCI programming is also very complex. For example, at the beginning of the design process, there was a lot of interviewing of users to get their requirements, then analysis of their requirements to try to design an interface that would meet their needs, after which a lot of pseudo-code had to be written to implement the designed interface, which was much more complex than expected. Many of the designed interfaces had to be cut. User requirements had to be compromised, and the core code to generate the multiplication tables was even then. Even so, the core code for generating the multiplication tables was only two percent of the total code, which shows that the coding workload for HCI programming is heavier than for core programming.","link":"/2023/01/07/HCIPorject/"},{"title":"Volunteer in 6th Confucius Institute Day","text":"The Confucius Institute Day was a significant event, being the first Confucius Institute Day to be resumed after the disruption caused by the COVID19. My DutyAt the Confucius Institute Day I worked on the following tasks: assisting guests with photo taking, assisting with the event attendance records and handing out gifts, managing and scheduling the props for the live performance and counting the list of props after the event. It was a very rewarding day for me, not only did my efforts ensure the event ran smoothly, but more meaningfully I gained friends and smiles.","link":"/2023/01/05/Kongzi/"},{"title":"Assisted in organising TALE 2022 during as a student assistant in the Department of Computing","text":"Transforming Educational Technologies and Pedagogies for the Next Decade About TALEIEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE) 2022. IEEE TALE is the IEEE Education Society’s flagship Asia-Pacific conference series, catering to researchers and practitioners with an interest in engineering, technology, and integrated STEM education as well as those interested in the innovative use of digital technologies for learning, teaching, and assessment in any discipline. The conference target audience is diverse and includes those working in the higher education, vocational education and training (VET), K-12, corporate, government, and healthcare sectors. ThemeTransforming Educational Technologies and Pedagogies for the Next Decade Core Tracks● Engineering Education ● Computing &amp; IT Education ● STEM Education ● Technology-Enhanced Learning ● Open, Flexible &amp; Distance Learning ● Workplace &amp; Industry-Based Learning AcknowledgementIEEE TALE 2022 is supported by a grant of the Croucher Foundation","link":"/2023/01/05/TALE/"},{"title":"Tai Mo Shan","text":"Tai Mo Shan Personal Photography Collection Road Human Ink Miao Gao Wind City Orange afternoon World Cup M148 Downhill Winter Tiredness Home","link":"/2023/01/04/Tai-Mo-Shan/"},{"title":"Volunteers for the PolyU 85th Anniversary Public Lecture Series","text":"To celebrate its 85th anniversary, PolyU organised a public lecture at the Jockey Club Auditorium PolyU inviting Ms Guo Jingjing, an Olympic gold medalist, to share her experience as an athlete and Olympic gold medalist with the theme of “Pouring Water into Light - Chasing Your Dreams” to encourage young people to persevere in pursuing their dreams. The talk attracted over 800 guests, students, teachers, alumni and members of the public. My dutyI am honoured to have been given the opportunity by the PolyU to participate in this event and my area of responsibility is the auditorium.","link":"/2023/01/05/guojingjing/"},{"title":"PolyU Undergraduate Info Day 2022 COMP student helper","text":"It Is estimated that more than 6,000 visitors to PolyU campus in this year Info Day. My task was to give them information about our programees and our school My DutyI need to be passionate about introducing visitors to our profession and trying to bring them back to our stand for further conversation. This is a great way to develop my communication skills. In addition to this, it was also my task to take visitors to our department’s laboratories and to answer their questions and give them detailed information about our department on the way.","link":"/2023/01/05/infoDay/"},{"title":"Volunteer Umpire in 2022 Poly CSSA Table Tennis Competition","text":"The event is organised by PolyU CSSA and the venue and prize costs are also covered by CSSA. My dutyMy task is to supervise the game, calculate the scores for the game and announce the winner.","link":"/2023/01/05/pingpang/"},{"title":"Multi-thread Web Server","text":"This project aims to develop a socket program to implement a Web service using the HTTP protocol. Downald from GIT: https://github.com/FoeverA0/Multi-thread-Web-Server.git Function create a connection socket when contacted by a client (browser); receive the HTTP request from this connection; parse the request to determine the specific file being requested; get the requested file from the server’s file system; create an HTTP response message consisting of the requested file preceded by header lines; send the response over the TCP connection to the requesting client. If the client requests a file that is not present in the server, the server will return a “404 Not Found” error message. NoteYour can run server program, and then test server program by sending requests from the client programs running on different hosts. You may run the server on your own computer, using the IP address of 127.0.0.1. If you run server on a host that already has a Web server running on it, then you should use a different port than port 80 for your Web server. Technical routesI develop my code in two stages. In the first stage, I simply implement the server program to receive the HTTP request messages and display the contents. After this is running properly, I add the code to generate appropriate responses in the second stage. The Web server have a log file to record statistics of the client requests. Each request corresponds to one line of record in the log. Write down client hostname/IP address, access time, requested file name and response type for each record. My Web server also can handle some simple errors, such as web-page not found. NoteI use Python languages for the project. When implementing the Web server, I use basic socket programming classes to build the Web server from scratch instead of using the HTTPServer class directly. main menu codeclient_connection.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, True) client_connection.ioctl(socket.SIO_KEEPALIVE_VALS,(1, 60*1000, 30*1000)) code of main menu&lt;html&gt; &lt;head&gt; &lt;link rel=&quot;icon&quot; href=&quot;data:,&quot;&gt; &lt;title&gt;Index&lt;/title&gt; &lt;link rel=&quot;icon&quot; href=&quot;data:,&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;h3&gt;Welcome to the Multi-thread Web Server.&lt;/h3&gt; &lt;p&gt;Here's a link to &lt;a href=&quot;helloworld.html&quot;&gt;alice.txt&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Here's a link to &lt;a href=&quot;image.html&quot;&gt;image.jpg&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Here's a link to &lt;a href=&quot;404.html&quot;&gt;404&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Here's a link to &lt;a href=&quot;textlog.txt&quot;&gt;textlog.txt&lt;/a&gt;.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; return 200 or 304 else: if dt1 &lt; ifmodified and first is not True: response = 'HTTP/1.1 304 Not Modified\\nLast_Modified: {0}\\n'.format(modify_time) client_connection.sendall(response.encode()) # return 304 because the file not modified else: ifmodified = datetime.now() response = 'HTTP/1.1 200 OK\\nLast_Modified: {0}\\n'.format(modify_time) #command finish successfully first1 = True client_connection.sendall(response.encode()) fin = open('htdocs' + filename) content = fin.read() fin.close() response = 'If-Modified-Since: '+now_time+'\\n\\n'+content client_connection.sendall(response.encode()) # This implements the GET command txt file function of this program After running the program, enter the http://127.0.0.1:8000 in the browser, at this time the browser will send a GET command like a web server running in the background, and the run function in the program starts a subprocess to call the handle_request function after receiving the command, where the user’s request is further processed. For example, this time we send the GET command to determine the last modified date and if-modified-since date of the file after the if statement determines that we want to open a file that is not an image file and decides the return value, because we are the first time to access this server , and the file we access exists on the server, we get a return value of 200 ok, which allows us to display the returned file normally.","link":"/2023/01/05/webSever/"}],"tags":[{"name":"Photography","slug":"Photography","link":"/tags/Photography/"},{"name":"Travel","slug":"Travel","link":"/tags/Travel/"},{"name":"Cheung Chau","slug":"Cheung-Chau","link":"/tags/Cheung-Chau/"},{"name":"Figma","slug":"Figma","link":"/tags/Figma/"},{"name":"HCI","slug":"HCI","link":"/tags/HCI/"},{"name":"Project","slug":"Project","link":"/tags/Project/"},{"name":"Pseudocodice","slug":"Pseudocodice","link":"/tags/Pseudocodice/"},{"name":"Confucius Institute","slug":"Confucius-Institute","link":"/tags/Confucius-Institute/"},{"name":"Volunteer","slug":"Volunteer","link":"/tags/Volunteer/"},{"name":"Campus Experience","slug":"Campus-Experience","link":"/tags/Campus-Experience/"},{"name":"Students Assistants","slug":"Students-Assistants","link":"/tags/Students-Assistants/"},{"name":"TALE 2022","slug":"TALE-2022","link":"/tags/TALE-2022/"},{"name":"Pedagogy","slug":"Pedagogy","link":"/tags/Pedagogy/"},{"name":"Educational technology","slug":"Educational-technology","link":"/tags/Educational-technology/"},{"name":"Tai Mo Shan","slug":"Tai-Mo-Shan","link":"/tags/Tai-Mo-Shan/"},{"name":"PolyU","slug":"PolyU","link":"/tags/PolyU/"},{"name":"Department of Computing","slug":"Department-of-Computing","link":"/tags/Department-of-Computing/"},{"name":"PolyU CSSA","slug":"PolyU-CSSA","link":"/tags/PolyU-CSSA/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"Multi-thread","slug":"Multi-thread","link":"/tags/Multi-thread/"},{"name":"Web server","slug":"Web-server","link":"/tags/Web-server/"},{"name":"Wireshark","slug":"Wireshark","link":"/tags/Wireshark/"}],"categories":[{"name":"Photography","slug":"Photography","link":"/categories/Photography/"},{"name":"Project","slug":"Project","link":"/categories/Project/"},{"name":"Volunteer Experience","slug":"Volunteer-Experience","link":"/categories/Volunteer-Experience/"},{"name":"Employment Record","slug":"Employment-Record","link":"/categories/Employment-Record/"}],"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"About Me","text":"EDUCATION The Hong Kong Polytechnic University (PolyU)-Hong Kong, China BSc (HONS) COMPUTING 2022-present C/C++, Java, Python, R, Assembly-language, Discrete mathematics, Compilers Principles, Computer network, Data structures, Computer organization, Database systems, Introduction to data analytics, OOP EXCHANGE EXPERIENCE Harbin Institute of Technology Project 2: Leading Computer Science, Creating the Future 2021/22 Semester 3 Graphical Models and Probabilistic Inference Fudan University 復旦大學港澳萬人計畫秋季課程 2022 2022/23 Semester 1 Introduction to Python","link":"/about/index.html"}]}